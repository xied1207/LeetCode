class Solution(object):
    def fourSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        ans=[]
        nums.sort()
        for i in xrange(len(nums)-3):
            temp=self.threeSum(nums[i+1:],target-nums[i])
            if len(temp)!=0:
                for item in temp:
                    item.insert(0,nums[i])
                    ans.append(item)
        newans=[]
        for item in ans:
            if item not in newans:
                newans.append(item)
        return newans
    def threeSum(self,nums,target):
        res = []
        for i in xrange(len(nums)-2):
            if i > 0 and nums[i] == nums[i-1]:
                continue
            else:
                l, r = i+1, len(nums)-1
            while l < r:
                s = nums[i] + nums[l] + nums[r]
                if s < target:
                    l +=1 
                elif s > target:
                    r -= 1
                else:
                    res.append([nums[i], nums[l], nums[r]])
                    while l < r and nums[l] == nums[l+1]:
                        l += 1
                    while l < r and nums[r] == nums[r-1]:
                        r -= 1
                    l += 1
                    r -= 1
        return res