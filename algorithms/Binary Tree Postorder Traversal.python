# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def postorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        ans=[]
        if root!=None:
            self.goDown(root,ans)
        return ans
    def goDown(self,node,ans):
        if node.right!=None and node.left!=None:
            self.goDown(node.left,ans)
            self.goDown(node.right,ans)
            ans.append(node.val)
        elif node.right!=None and node.left==None:
            self.goDown(node.right,ans)
            ans.append(node.val)
        elif node.right==None and node.left!=None:
            self.goDown(node.left,ans)
            ans.append(node.val)
        else:
            ans.append(node.val)
        