# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def maxDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        ans=0
        if root!=None:
            ans=max(ans,self.goDeep(root,1))
        return ans
    def goDeep(self,node,depth):
        if node.right==None and node.left==None:
            print(depth)
            return depth
        elif node.right!=None and node.left!=None:
            depth+=1
            return max(self.goDeep(node.right,depth),self.goDeep(node.left,depth))
        elif node.right!=None and node.left==None:
            depth+=1
            return self.goDeep(node.right,depth)
        else:
            depth+=1
            return self.goDeep(node.left,depth)
        