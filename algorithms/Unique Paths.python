class Solution(object):
    def uniquePaths(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
        '''
        if m==1 and n==1:
            return 1
        return self.findPaths(m,n,1,1)
    def findPaths(self,m,n,i,l):
        if i==m and l==n:
            return 0
        if i==m:
            if l==n-1:
                return 1
            else:
                return self.findPaths(m,n,i,l+1)
        if l==n:
            if i==m-1:
                return 1
            else:
                return self.findPaths(m,n,i+1,l)
        return self.findPaths(m,n,i+1,l)+self.findPaths(m,n,i,l+1)
        '''
        if not m or not n:
            return 0
        dp = [[1 for _ in xrange(n)] for _ in xrange(m)]
        for i in xrange(1, m):
            for j in xrange(1, n):
                dp[i][j] = dp[i-1][j] + dp[i][j-1]
        return dp[-1][-1]
        